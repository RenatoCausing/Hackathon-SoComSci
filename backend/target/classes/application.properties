server.port=8080

# PostgreSQL database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/patientqueue
spring.datasource.username=postgres
spring.datasource.password=causing09
spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=10
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.idleTimeout=300000
spring.datasource.hikari.maxLifetime=1200000

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# --- Gemini API Configuration ---
# !!! IMPORTANT: Replace YOUR_GEMINI_API_KEY with your actual API key !!!
gemini.api.key=AIzaSyB0wM6Wa0hgPQ0lACtFYWszQvz8JJovRao
# !!! IMPORTANT: Replace YOUR_GEMINI_API_URL with the correct Gemini API endpoint URL !!!
# Example URL for the generateContent endpoint: https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent
gemini.api.url=https://generativelanguage.googleapis.com/v1/models/gemini-1.5-flash-001:generateContent?key=AIzaSyB0wM6Wa0hgPQ0lACtFYWszQvz8JJovRao